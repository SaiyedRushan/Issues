name: Build & Test

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build-test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Use the latest stable Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: "backend/.nvmrc"
          cache: "npm"
          cache-dependency-path: backend/package-lock.json

      - name: Install Dependencies
        working-directory: backend
        run: npm ci

      - name: Run Build
        working-directory: backend
        run: npm run build

      - name: Run Test
        working-directory: backend
        run: npm run test

  docker-push:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      # Login step only executed for pushes to main
      - name: Login to GitHub Container Registry
        if: github.ref == 'refs/heads/main'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Build and tag the production Docker image
      - name: Build the Docker image
        working-directory: backend
        run: |
          docker build . --file Dockerfile --tag ghcr.io/${{ github.repository }}:${{ github.sha }}
          if [ "${{ github.ref }}" == "refs/heads/main" ]; then
            docker tag ghcr.io/${{ github.repository }}:${{ github.sha }} ghcr.io/${{ github.repository }}:latest
          fi

      # Push the production Docker image
      - name: Push the Docker image
        working-directory: backend
        if: github.ref == 'refs/heads/main'
        run: |
          docker push ghcr.io/${{ github.repository }}:${{ github.sha }}
          docker push ghcr.io/${{ github.repository }}:latest
